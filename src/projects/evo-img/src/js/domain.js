"use strict";import Assert from"../../node_modules/arslib/util/assert.js";import EvoRunner from"./evo-runner.js";import evalUtil from"../../node_modules/ars-genetic-programming/eval-util/eval-util.js";import evoImg,{drawingCodeToType,globalCompositeOperationCodeToType}from"../../node_modules/arslib/util/evo-img.js";export default function Domain(e,t,o,a,i,n,r){let s,l,u,g,m,d=[],p=Number.MIN_SAFE_INTEGER,c=[];this.pauseToggle=function(){u.pauseToggle()},this.getCode=function(){return c},this.start=function(){v(),u.start()};let v=()=>{s=t.getContext("2d"),l=o.getContext("2d"),d=evalUtil.defineEdgeDetectionMap(e,a),g=[[0,drawingCodeToType.length-1],[0,globalCompositeOperationCodeToType.length-1],[0,a],[0,i],[1,n],[1,r],[0,255],[0,255],[0,255],[0,2*Math.PI],[.1,1]],m=[1,1,1,1,1,1,1,1,1,.1,.1],u=new EvoRunner(this.evaluate,e,g,m)};function f(e){e.clearRect(0,0,a,i)}this.evaluate=function(t){c=t,f(l),evoImg(t,l);const a=l.getImageData(0,0,l.canvas.width,l.canvas.height).data,i=evalUtil.compareImages(a,e,d);return Assert.assert(i>=0,"invalid image evaluation credit"),function(e){e>=p&&(f(s),s.drawImage(o,0,0),p=e)}(i),i}};