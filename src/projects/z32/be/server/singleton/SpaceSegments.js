"use strict";import Assert from"../../libs/arslib/util/assert.js";function SpaceSegments(){let t,e,s=this;function i(t,e){return this.row=t,this.column=e,this.adjacents=function(t,e){let i=[];for(let n=t-1;n<=t+1;n++)for(let t=e-1;t<=e+1;t++)n>=0&&n<=s.NUM_SEGMENT_ROWS-1&&t>=0&&t<=s.NUM_SEGMENT_COLUMNS-1&&i.push([n,t]);return i}(t,e),this.agents={},this}let n=t=>{Assert.assertIsNumber(t.x),Assert.assertIsNumber(t.y);let s=this.NUM_SEGMENT_ROWS-1-Math.trunc((t.y+this.WORLD_HEIGHT/2)/(this.WORLD_HEIGHT/this.NUM_SEGMENT_ROWS));Assert.assertIsNumber(s),s=s>=this.NUM_SEGMENT_ROWS?this.NUM_SEGMENT_ROWS-1:s<0?0:s;let i=Math.trunc((t.x+this.WORLD_WIDTH/2)/(this.WORLD_WIDTH/this.NUM_SEGMENT_COLUMNS));return Assert.assertIsNumber(i),i=i>=this.NUM_SEGMENT_COLUMNS?this.NUM_SEGMENT_COLUMNS-1:i<0?0:i,Assert.assert(e[s][i]),e[s][i]};this.start=function(t,e,s=20,i=20){this.WORLD_WIDTH=t,this.WORLD_HEIGHT=e,this.NUM_SEGMENT_ROWS=s,this.NUM_SEGMENT_COLUMNS=i,this.clear()},this.clear=function(){t={},e=[],e=[...Array(this.NUM_SEGMENT_ROWS)].map((t,e)=>[...Array(this.NUM_SEGMENT_COLUMNS)].map((t,s)=>new i(e,s)))},this.checkAgentExists=function(e){return Object.keys(t).includes(e.id)},this.addAgent=function(e){let s=n(e.getPosition());t[e.id]=s,s.agents[e.id]=e},this.removeAgent=function(e){let s=t[e.id];s&&(delete s.agents[e.id],delete t[e.id])},this.updateAgent=function(t){this.removeAgent(t),this.addAgent(t)},this.getNearbyAgentsByRectangle=function(t){let s=n(t.topLeft()),i=n(t.bottomRight()),r=[];for(let t=s.row;t<=i.row;t++)for(let n=s.column;n<=i.column;n++)r.push(Object.values(e[t][n].agents));return[].concat.apply([],r)},this.getNearbyAgentsByPosition=function(t){return Object.values(n(t).agents)},this.getNearbyAgents=function(t){let s=n(t.getPosition()).adjacents.map(([t,s])=>Object.values(e[t][s].agents));return[].concat.apply([],s)}}var spaceSegments=new SpaceSegments;export default spaceSegments;