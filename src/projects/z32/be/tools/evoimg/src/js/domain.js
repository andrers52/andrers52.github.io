"use strict";import Assert from"../lib/arslib/util/assert.js";import EvoRunner from"./evo-runner.js";import evalUtil from"../lib/arslib/geneticComputing/evalUtil/evalUtil.js";import evoImg,{drawingCodeToType,globalCompositeOperationCodeToType}from"../lib/arslib/util/evoImg.js";export default function Domain(t,e,o,i,a,n,r){let l,s,g,m,u,p=[],c=Number.MIN_SAFE_INTEGER,d=[];this.startStop=function(){g.startStop()},this.getCode=function(){return d},this.start=function(){v(),g.start()};let v=()=>{l=e.getContext("2d"),s=o.getContext("2d"),p=evalUtil.defineEdgeDetectionMap(t,i),m=[[0,drawingCodeToType.length-1],[0,globalCompositeOperationCodeToType.length-1],[0,i],[0,a],[1,n],[1,r],[0,255],[0,255],[0,255],[0,2*Math.PI],[.1,1]],u=[1,1,1,1,1,1,1,1,1,.1,.1],g=new EvoRunner(this.evaluate,t,m,u)};function f(t){t.clearRect(0,0,i,a)}this.evaluate=function(e){d=e,f(s),evoImg(e,s);const i=s.getImageData(0,0,s.canvas.width,s.canvas.height).data,a=evalUtil.compareImages(i,t,p);return Assert.assert(a>=0,"invalid image evaluation credit"),function(t){t>=c&&(f(l),l.drawImage(o,0,0),c=t)}(a),a}};