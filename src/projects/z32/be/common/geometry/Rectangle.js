"use strict";import Assert from"../../libs/arslib/util/assert.js";import Vector,{vect}from"./Vector.js";import Random from"../../libs/arslib/util/random.js";export default function Rectangle(t=new Vector,e=new Vector){this.center=t,this.size=e.abs()};function intersectionWithCornerInside(t,e){return t.checkHasCornerInside(e)&&t.checkHasCornerOutside(e)}function intersectionWithoutCornerInside(t,e){if(Rectangle.sameSize(t,e))return!1;let n=Rectangle.pickGreaterX(t,e),i=Rectangle.pickGreaterY(t,e),o=Rectangle.pickSmallerX(t,e),r=Rectangle.pickSmallerY(t,e);return o.bottomLeft().x>=n.bottomLeft().x&&o.bottomLeft().x<=n.bottomRight().x&&o.bottomRight().x>=n.bottomLeft().x&&o.bottomRight().x<=n.bottomRight().x&&r.bottomLeft().y>=i.bottomLeft().y&&r.bottomLeft().y<=i.topLeft().y&&r.topLeft().y>=i.bottomLeft().y&&r.topLeft().y<=i.topLeft().y}Rectangle.prototype.getWidth=function(){return this.size.x},Rectangle.prototype.getHeight=function(){return this.size.y},Rectangle.prototype.getSize=function(){return this.size},Rectangle.prototype.area=function(){return this.size.x*this.size.y},Rectangle.prototype.diagonal=function(){return Math.sqrt(Math.pow(this.size.x,2)+Math.pow(this.size.y,2))},Rectangle.prototype.meanSize=function(){return(this.size.x+this.size.y)/2},Rectangle.prototype.minSize=function(){return Math.min(this.size.x,this.size.y)},Rectangle.prototype.maxSize=function(){return Math.max(this.size.x,this.size.y)},Rectangle.prototype.getCenter=function(){return this.center},Rectangle.prototype.getPosition=function(){return this.center},Rectangle.prototype.setSize=function(t){return this.size=t,this},Rectangle.prototype.setCenter=function(t){return this.center=t,this},Rectangle.prototype.setPosition=function(t){return this.center=t,this},Rectangle.prototype.setPosition2D=function(t){this.center;return this.center=t,this},Rectangle.prototype.setPointOfInterestAtPosition=function(t,e){if(!t||"center"===t)return this.setCenter(e);let n;Assert.assertIsValidString(t,["topLeft","topRight","bottomLeft","bottomRight","bottomCenter","topCenter","leftCenter","rightCenter"],"Non valid rectangle point of interest");let i=this.halfSize();switch(t){case"topLeft":n=vect(i.x,-i.y);break;case"topRight":n=vect(-i.x,-i.y);break;case"bottomLeft":n=vect(i.x,i.y);break;case"bottomRight":n=vect(-i.x,i.y);break;case"bottomCenter":n=vect(0,i.y);break;case"topCenter":n=vect(0,-i.y);break;case"leftCenter":n=vect(i.x,0);break;case"rightCenter":n=vect(-i.x,0)}return this.setCenter(e.add(n)),this},Rectangle.prototype.allignToRectangle=function(t,e){switch(Assert.assertIsValidString(e,["top","bottom","left","right"],`Invalid option ${e} for "alligment" parameter.`),e){case"top":this.center.y=t.topLeft().y-this.size.y/2;break;case"bottom":this.center.y=t.bottomLeft().y+this.size.y/2;break;case"left":this.center.x=t.bottomLeft().x+this.size.x/2;break;case"right":this.center.x=t.bottomRight().x-this.size.x/2}},Rectangle.prototype.setPositionRelativeToRectangle=function(t,e,n="inside",i=0){switch(Assert.assertIsValidString(n,["inside","outside"],`Invalid option ${n} for "insideOutside" parameter.`),Assert.assertIsValidString(e,["topLeft","topRight","randomTop","bottomLeft","bottomRight","randomBottom","center","bottomCenter","topCenter","leftCenter","randomLeft","rightCenter","randomRight"],"Invalid Rectangle relative position"),e){case"topLeft":this.setPointOfInterestAtPosition("inside"==n?"topLeft":"bottomRight",t.topLeft());break;case"topRight":this.setPointOfInterestAtPosition("inside"==n?"topRight":"bottomLeft",t.topRight());break;case"randomTop":this.setPointOfInterestAtPosition("inside"==n?"topLeft":"bottomLeft",t.topLeft()),this.move(vect(Random.randomFromIntervalInclusive(0,t.size.x-this.size.x),0));break;case"bottomLeft":this.setPointOfInterestAtPosition("inside"==n?"bottomLeft":"topRight",t.bottomLeft());break;case"bottomRight":this.setPointOfInterestAtPosition("inside"==n?"bottomRight":"topleft",t.bottomRight());break;case"randomBottom":this.setPointOfInterestAtPosition("inside"==n?"bottomLeft":"topleft",t.bottomLeft()),this.move(vect(Random.randomFromIntervalInclusive(0,t.size.x-this.size.x),0));break;case"center":Assert.assert("inside"==n,"Error: cannot position at center and outside at same time."),this.setPointOfInterestAtPosition("center",t.center);break;case"bottomCenter":this.setPointOfInterestAtPosition("inside"==n?"bottomCenter":"topCenter",t.bottomCenter());break;case"topCenter":this.setPointOfInterestAtPosition("inside"==n?"topCenter":"bottomCenter",t.topCenter());break;case"leftCenter":this.setPointOfInterestAtPosition("inside"==n?"leftCenter":"rightCenter",t.leftCenter());break;case"randomLeft":this.setPointOfInterestAtPosition("inside"==n?"bottomLeft":"topLeft",t.bottomLeft()),this.move(vect(0,Random.randomFromIntervalInclusive(0,t.size.y-this.size.y)));break;case"rightCenter":this.setPointOfInterestAtPosition("inside"==n?"rightCenter":"leftCenter",t.rightCenter());break;case"randomRight":this.setPointOfInterestAtPosition("inside"==n?"bottomRight":"topRight",t.bottomRight()),this.move(vect(0,Random.randomFromIntervalInclusive(0,t.size.y-this.size.y)))}let o=this.center.subtract(t.center).normalize();return this.center.add(o.multiplyByScalar(i)),this},Rectangle.prototype.clone=function(){return new Rectangle(this.getCenter().clone(),this.getSize().clone())},Rectangle.prototype.checkPointInside=function(t){return t.x>=this.topLeft().x&&t.x<=this.topRight().x&&!!(t.y<=this.topLeft().y&&t.y>=this.bottomLeft().y)},Rectangle.prototype.checkPointOutside=function(t){return t.x<this.topLeft().x||t.x>this.topRight().x||!!(t.y>this.topLeft().y||t.y<this.bottomLeft().y)},Rectangle.prototype.halfSize=function(){return new Vector(this.size.x/2,this.size.y/2)},Rectangle.prototype.getMaxX=function(){return this.center.x+this.halfSize().x},Rectangle.prototype.getMinX=function(){return this.center.x-this.halfSize().x},Rectangle.prototype.getMaxY=function(){return this.center.y+this.halfSize().y},Rectangle.prototype.getMinY=function(){return this.center.y-this.halfSize().y},Rectangle.prototype.topLeft=function(){return new Vector(this.getMinX(),this.getMaxY())},Rectangle.prototype.topRight=function(){return new Vector(this.getMaxX(),this.getMaxY())},Rectangle.prototype.bottomLeft=function(){return new Vector(this.getMinX(),this.getMinY())},Rectangle.prototype.bottomRight=function(){return new Vector(this.getMaxX(),this.getMinY())},Rectangle.prototype.bottomCenter=function(){return new Vector(this.center.x,this.getMinY())},Rectangle.prototype.topCenter=function(){return new Vector(this.center.x,this.getMaxY())},Rectangle.prototype.leftCenter=function(){return new Vector(this.getMinX(),this.center.y)},Rectangle.prototype.rightCenter=function(){return new Vector(this.getMaxX(),this.center.y)},Rectangle.prototype.convert=function(t,e){return new Rectangle(this.center.convert(t,e),this.size.convert(t,e))},Rectangle.prototype.move=function(t){return this.center.add(t),this},Rectangle.prototype.isMovingToInsideOfOtherRectangle=function(t,e){let n=this.center.clone().add(t),i=this.center.distance(e.center);return n.distance(e.center)<i},Rectangle.prototype.reduceToSquare=function(){let t=Math.min(this.size.x,this.size.y);return this.size=new Vector(t,t),this},Rectangle.prototype.enlargeToSquare=function(){let t=Math.max(this.size.x,this.size.y);return this.size=new Vector(t,t),this},Rectangle.prototype.positionPercentage=function(t){if(!this.checkPointInside(t))return null;let e=this.bottomLeft(),n=t.vectorDistance(e).abs(),i=100*n.x/this.size.x,o=100*n.y/this.size.y;return new Vector(i,o)},Rectangle.prototype.sizePercentageToPosition=function(t){return new Vector(this.size.x*t.x/100,this.size.y*t.y/100).subtract(this.size.clone().divideByScalar(2))},Rectangle.prototype.checkInside=function(t){return this.checkPointInside(t.topLeft())&&this.checkPointInside(t.bottomRight())&&this.checkPointInside(t.topRight())&&this.checkPointInside(t.bottomLeft())},Rectangle.prototype.checkHasCornerInside=function(t){return this.checkPointInside(t.topLeft())||this.checkPointInside(t.bottomRight())||this.checkPointInside(t.topRight())||this.checkPointInside(t.bottomLeft())},Rectangle.prototype.checkHasCornerOutside=function(t){return this.checkPointOutside(t.topLeft())||this.checkPointOutside(t.bottomRight())||this.checkPointOutside(t.topRight())||this.checkPointOutside(t.bottomLeft())},Rectangle.prototype.checkIntersection=function(t){return intersectionWithCornerInside(this,t)||intersectionWithoutCornerInside(this,t)},Rectangle.prototype.toString=function(){return`Rect(center -> ${this.center.toString()},  size -> ${this.size.toString()})`},Rectangle.prototype.grow=function(t){return this.size=this.size.multiplyByScalar(t||1),this},Rectangle.prototype.shrink=function(t){return this.size=this.size.multiplyByScalar(1/(t||1)),this},Rectangle.prototype.growByValue=function(t){return this.size=this.size.add(t),this},Rectangle.prototype.shrinkByValue=function(t){return this.size=this.size.add(-t),this},Rectangle.makeFromCorners=function(t,e){let n=new Vector(Math.min(t.x,e.x),Math.min(t.y,e.y)),i=new Vector(Math.max(t.x,e.x),Math.max(t.y,e.y));return new Rectangle(Vector.makeMean(n,i),i.subtract(n))},Rectangle.makeFromCollectionOfRectangles=function(t){return Assert.assert(t.length>=1,"Rectangle.makeFromCollectionOfRectanglesToBeEnclosed error: less than two rectangles given"),1===t.length?t[0].clone():t.reduce(function(t,e){return Rectangle.makeFromCorners(Rectangle.makeFromCorners(t.bottomLeft(),e.bottomLeft()).bottomLeft(),Rectangle.makeFromCorners(t.topRight(),e.topRight()).topRight())})},Rectangle.pickGreaterX=function(t,e){return t.getSize().x>=e.getSize().x?t:e},Rectangle.pickGreaterY=function(t,e){return t.getSize().y>=e.getSize().y?t:e},Rectangle.pickSmallerX=function(t,e){return t.getSize().x<=e.getSize().x?t:e},Rectangle.pickSmallerY=function(t,e){return t.getSize().y<=e.getSize().y?t:e},Rectangle.sameSize=function(t,e){return t.getSize().equal(e.getSize())},Rectangle.checkSeparated=function(t,e){return!(t.checkInside(e)||e.checkInside(t)||e.checkIntersection(t))};export function rect(t,e,n,i){return new Rectangle(new Vector(t,e),new Vector(n,i))};