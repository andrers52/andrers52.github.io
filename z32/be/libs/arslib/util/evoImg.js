"use strict";import Assert from"./assert.js";let fill=!0,lineWidth=1;export let drawingCodeToType=["rectangle","circle","triangle"];export let globalCompositeOperationCodeToType=["source-over","lighter","copy","xor","multiply","screen","overlay","darken","lighten","color-dodge","color-burn","hard-light","soft-light","difference","exclusion","hue","saturation","color","luminosity"];function execInstruction(e,t){let l=e[2],o=e[3],r=e[4],i=e[5],a=e[6],n=e[7],s=e[8],c=e[9],g=e[10];switch(t.save(),t.translate(l,o),t.rotate(-c),t.fillStyle=t.strokeStyle=`rgba(${a}, ${n}, ${s}, 1)`,t.globalAlpha=g,t.globalCompositeOperation=globalCompositeOperationCodeToType[e[1]],t.lineWidth=lineWidth,drawingCodeToType[e[0]]){case"rectangle":fill?t.fillRect(l-r/2,o-i/2,r,i):(t.rect(l-r/2,o-i/2,r,i),t.stroke());break;case"circle":t.beginPath(),t.arc(l,o,(r+i)/4,0,2*Math.PI),fill?t.fill():t.stroke();break;case"triangle":t.beginPath(),t.moveTo(l,o-i/2),t.lineTo(l-r/2,o+i/2),t.lineTo(l+r/2,o+i/2),fill?t.fill():t.stroke();break;default:Assert.assert(!1,"Instruction is flawed")}t.restore()}export default function evoImg(e,t){for(let l=0;l<e.length;l++)execInstruction(e[l],t)};